@using MudBlazor
@inherits LayoutComponentBase
<MudThemeProvider DefaultScrollbar="true" @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="AppThemes.DefaultTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<Radzen.Blazor.RadzenComponents @rendermode="InteractiveServer" />



<MudLayout>
    <MudAppBar  Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="MudBlazor.Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="MudBlazor.Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer  @bind-Open="_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">Application</MudText>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="pa-5" MaxWidth="MaxWidth.ExtraLarge">

        @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>





<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>
@code {

    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
