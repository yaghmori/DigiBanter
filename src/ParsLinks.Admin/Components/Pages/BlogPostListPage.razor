@page "/Posts"

<div class="page">
    <div class="header">
        <div class="title">
            <i class="fad fa-blog fa-2x"></i>
            <h4>
                @_viewLocalizer[ViewResources.BlogPostList]
            </h4>
        </div>
        <div class="action-group">
            <div class="add-btn-lg">
                <BlogPostAddButton OnActionCompleted="LoadDataAsync" />
            </div>
            <RefreshPageButton OnActionCompleted="LoadDataAsync" />
        </div>

    </div>
    <div class="body">
        <div class="list">
            @if (!IsLoading)
            {
                    <div class="paper-box post-item disable">
            <div class="cover">
                <MudSkeleton Class="img" Style="border-radius:10px; width:250;min-width:250px; height:150px"  SkeletonType="SkeletonType.Rectangle"  Animation="Animation.Wave" />
            </div>
            <div class="content-group">
                <div class="content">


                <div class="title">
                    <MudSkeleton Animation="Animation.Pulse"  Width="40%" Height="25px" />
                </div>


                <div class="date">
                    <MudSkeleton Animation="Animation.Pulse"  Width="100px" />
                </div>


                <div class="author">
                    <MudSkeleton Animation="Animation.Pulse"  Width="120px" />
                </div>

                <div class="chipset" style="gap:5px;">
                    <MudSkeleton Animation="Animation.Pulse"  Width="50px" Height="30px" Style="border-radius:.5rem;" />
                </div>
                <div class="chipset" style="gap:5px;">
                    <MudSkeleton Animation="Animation.Pulse"  Width="30px" Height="30px" Style="border-radius:.5rem;" />
                    <MudSkeleton Animation="Animation.Pulse"  Width="40px" Height="30px" Style="border-radius:.5rem;"/>
                    <MudSkeleton Animation="Animation.Pulse"  Width="40px" Height="30px" Style="border-radius:.5rem;" />
                </div>

                                </div>

                <div class="action-group">
                    <MudSkeleton Animation="Animation.Pulse" Width="170px" Height="45px" />

                </div>



        </div>
        </div>
                @foreach (var post in BlogPosts)
                {
                    <div class="paper-box post-item">
                        <div class="cover">
                            <img class="img" src="@post.Image" />
                        </div>
                        <div class="content-group">
                            <div class="content">
                                <div class="title">@post.Title</div>
                                <span class="date">
                                    <i class="material-icons-two-tone">calendar_today</i>
                                    <span>@post.PublishedAt.ToElapsedTime()</span>
                                </span>
                                @if(!string.IsNullOrWhiteSpace(post.Author))
                                {
                                             <span class="date">
                                    <i class="material-icons-outlined">account_circle</i>
                                    <span>@post.Author</span>
                                </span>
                                }
                              

                                <div class="categories">
                                    <div class="chipset">
                                        @foreach (var item in post.Categories)
                                        {
                                            <MudChip Color="@MudBlazor.Color.Inherit"
                                                     Variant="@MudBlazor.Variant.Text"
                                                     Size="MudBlazor.Size.Small"
                                                     T="string"
                                                     Text="@item.Name" />
                                        }
                                    </div>
                                </div>
                                <div class="translation">

                                    <div class="chipset">
                                        @foreach (var item in post.AvailableTranslations)
                                        {
                                            <MudChip Color="@MudBlazor.Color.Primary"
                                                     Variant="@MudBlazor.Variant.Text"
                                                     Size="MudBlazor.Size.Small"
                                                     T="string"
                                                     Text="@item" />
                                        }
                                    </div>
                                </div>

                            </div>

                            <div class="action-group">

                                <MudButtonGroup Color="@MudBlazor.Color.Primary" Variant="@MudBlazor.Variant.Text">

                                    <MudIconButton Color="@MudBlazor.Color.Primary">@_viewLocalizer[ViewResources.AddTranslation]</MudIconButton>

                                    <MudTooltip Text="@_viewLocalizer[ViewResources.Edit]" Arrow="true" Placement="Placement.Top">
                                        <MudIconButton Color="@MudBlazor.Color.Inherit"><i class="far fa-edit" /></MudIconButton>
                                    </MudTooltip>

                                    <MudTooltip Text="@_viewLocalizer[ViewResources.Delete]" Arrow="true" Placement="Placement.Top">
                                        <MudIconButton OnClick="()=>OnDeleteAsync(post)" Color="@MudBlazor.Color.Error"><i class="fas fa-trash-can" /></MudIconButton>
                                    </MudTooltip>
                                </MudButtonGroup>

                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
    
















            }
        </div>
    </div>


</div>
<div class="add-btn-sm">
    <BlogPostAddFabButton OnActionCompleted="LoadDataAsync" />
</div>
@code {



    public List<BlogPostResponse> BlogPosts { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();

    }

    async Task LoadDataAsync()
    {
        try
        {
            IsLoading = true;
            var response = await _blogPostApiService.GetAllPostsAsync(new BlogPostQueryParameters
                {
                    Lang = lang
                }, cancellationToken);
            if (response.Succeeded)
            {
                BlogPosts = response.Data;
            }
            else
            {
                _snackbarService.DisplayError(response.Messages);
            }
        }
        catch (Exception ex)
        {
            _snackbarService.DisplayError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }

    public async Task OnDeleteAsync(BlogPostResponse post)
    {

        var dgResult = await _dialogService.ShowDeleteMessageBoxAsync(_messageLocalizer[MessageResources.PostDeleteConfirmation].Value);
        if (dgResult)
        {
            var response = await _blogPostApiService.DeletePostByIdAsync(post.Id);
            if (response.Succeeded)
            {
                _snackbarService.DisplaySuccess(_messageLocalizer[MessageResources.PostSuccessfullyDeleted]);
                BlogPosts.Remove(post);
            }
            else
            {
                _snackbarService.DisplayError(response?.Messages);
            }

        }
    }
}
