@page "/podcast"
@page "/{lang}/podcast"
@attribute [StreamRendering]

<PageTitle>Podcast List</PageTitle>
<div class="section-header">
    <div class="left">
        <h1>Find And Listen On Your Favorite Podcast</h1>
        <p>
            It is a long established fact that a reader will be distracted by the readable
            content of a page when looking at its layout.
        </p>
        <a href="#">Get Started<i class="fas fa-circle-arrow-right"></i></a>

        <img src="https://live.themewild.com/yocast/assets/img/shape/06.png" alt="">
    </div>
    <div class="right">
        <img class="img1" src="https://live.themewild.com/yocast/assets/img/cta/01.png" alt="">
        <img class="img2" src="https://live.themewild.com/yocast/assets/img/shape/05.png" alt="">
    </div>
</div>



@if (!IsBussy)
{
    <div class="podcast-list" style="width:100%">
        @foreach (var item in PodcastItems)
        {
            <PodcastCard Podcast="item" />
        }
    </div>

}
else
{
    <div class="podcast-list" style="width:100%">
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />
        <PodcastCard Isloading="true" />

    </div>

}

@code {

    public bool IsBussy { get; set; }

    public List<PodcastResponse> PodcastItems { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsBussy = true;
            var response = await _podcastApiService.GetPodcastsAsync();
            if (response.Succeeded)
                PodcastItems = response.Data;

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            IsBussy = false;
        }

    }
}

